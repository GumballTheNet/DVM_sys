#!/bin/bash

# Uses variables: SRC_LANG, IS_OSX, PLINKER, PFLINKER, dvmdir, ADD_LIB_PATHS, ADD_LIBS, CUDA_LIB, flib, dvmshow

. dvm_utils.sh

errld() {
    if [ -n "$1" ]; then
        printf '%s\n' "$1" >>dvm.err
        printf '%s\n' "$1"
    fi
    echo "!!! error ${SRC_LANG}link !!!" >>dvm.err
    echo "!!! error ${SRC_LANG}link !!!"
    exit 1
}

rm -f dvm.err

SHARED_DVM=0
if [ "$1" = "-shared-dvm" ]; then
    if [ "$WIN32" != "1" ]; then
        if [ "$IS_OSX" != "1" ]; then
            SHARED_DVM=1
        else
            echo "Linking against shared DVM libraries is unavailable under OSX"
        fi
    else
        echo "Linking against shared DVM libraries is unavailable under OS Windows"
    fi
    shift
fi
LIB_SUFFIX=
MIC_OPT=
if [ "$1" = "-mmic" ]; then
    LIB_SUFFIX=".mic"
    CUDA_LIB=
    MIC_OPT="-mmic"
    shift
fi

OUTPUT=
if [ "$1" = "-o" ]; then
    OUTPUT="$2"
    shift 2
fi

CMD_END=()
for p in $ADD_LIB_PATHS; do
    CMD_END+=("-L$p")
    if [ "$WIN32" != "1" ]; then
        CMD_END+=(-Xlinker -rpath -Xlinker "$p")
    fi
done

if [ "$SRC_LANG" = "f" ]; then
    COM="$PFLINKER"
    eval CMD_END+=($CUDA_LIB $ADD_LIBS $flib)
    dvmflib="-ldvm-f$LIB_SUFFIX"
else
    COM="$PLINKER"
    eval CMD_END+=($CUDA_LIB $ADD_LIBS)
    dvmflib=
fi

eval CMD_BEGIN=($COM $MIC_OPT)

if [ -n "$OUTPUT" ]; then
    if [[ "$COM" =~ "link.exe" ]]; then
        CMD_BEGIN+=("/out:$OUTPUT")
    else
        CMD_BEGIN+=("-o" "$OUTPUT")
    fi
fi

if [ $SHARED_DVM -eq 0 ]; then
    dvmlibs=("$dvmdir/lib/dvmh$LIB_SUFFIX.$LIB_EXT" "$dvmdir/lib/map_tasks$LIB_SUFFIX.$LIB_EXT" "$dvmdir/lib/dvm$LIB_SUFFIX.$LIB_EXT")
else
    dvmlibs=("-L$dvmdir/lib" -Xlinker -rpath -Xlinker "$dvmdir/lib" -ldvmh$LIB_SUFFIX -ldvm-map-tasks$LIB_SUFFIX $dvmflib -ldvm$LIB_SUFFIX)
fi

do_cmd "${CMD_BEGIN[@]}" "$@" "${dvmlibs[@]}" "${CMD_END[@]}" || errld
